generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  username        String       @unique()
  email           String?
  password        String
  phoneNumber     String?
  mobileNumber    String?
  emailAddress    String?
  deptId          Int?
  desigId         Int?
  orgId           Int?
  companyId       Int?
  activeStatus    Boolean      @default(true)
  createdDate     String?
  createdTime     String?
  createdBy       Int?
  createdAt       DateTime?    @default(now())
  updatedDate     String?
  updatedTime     String?
  updatedAt       DateTime?
  twoFA           Boolean?     @default(false)
  Otp             Otp[]
  isPhoneVerified Boolean?     @default(false)
  permission      Permission[]
  UserRole        UserRole[]
  role            Role         @default(USER)
}

enum Role {
  USER
  ADMIN
}

model Permission {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
  UserRole UserRole? @relation(fields: [roleId], references: [id])
  roleId   String?   @db.ObjectId
}

model UserRole {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  user       User         @relation(fields: [userId], references: [id])
  userId     String       @db.ObjectId
  permission Permission[]
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  code      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  useCase   UseCase
}

enum UseCase {
  LOGIN
  D2FA
  PHV
}

model CourierService {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  address      String
  phone        String?
  mobileOne    String?
  mobileTwo    String?
  email        String?
  courierType  Int? //1 for bangladesh 2 for abroad
  activeStatus Boolean   @default(true)
  createdBy    String?
  createdDate  DateTime? @default(now())
  updatedBy    String?
  updatedDate  DateTime?
}

model Products {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  storeId                 String?                   @db.ObjectId
  store                   Store?                    @relation(fields: [storeId], references: [id])
  productName             String
  productDescription      String?
  categoryId              String
  subCategoryId           String?
  image                   String?
  latestProduct           Int
  productShow             Boolean                   @default(true)
  offer                   Boolean                   @default(false)
  specialDiscount         Int?
  productSlNo             Int?
  productPrice            Float
  currentPrice            Float?
  maufacturerBy           Int?
  manufactureDate         DateTime?
  warenty                 Boolean                   @default(true)
  activeStatus            Boolean                   @default(true)
  createdBy               String?
  createdDate             DateTime                  @default(now())
  updatedBy               String?
  updatedDate             DateTime?
  productsImages          ProductsImages[]
  requisitionChild        RequisitionChild[]
  requisitionApproveChild RequisitionApproveChild[]
  orderChild              OrderChild[]
}

model Store {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  udId             Int?
  storeName        String?
  storeDescription String?
  storeLocation    String?
  remarks          String?
  orgId            Int?
  activeStatus     Boolean    @default(true)
  createdDate      String?
  createdTime      String?
  createdBy        Int?
  createdAt        DateTime   @default(now())
  updatedDate      String?
  updatedTime      String?
  updatedAt        DateTime?
  updatedBy        Int?
  products         Products[]
}

model ProductsImages {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  productId        String?   @db.ObjectId
  products         Products? @relation(fields: [productId], references: [id])
  imageName        String
  imagePath        String
  imageDescription String?
  activeStatus     Boolean   @default(true)
  createdBy        String?
  createdDate      DateTime  @default(now())
  updatedBy        String
  updatedDate      DateTime
}

model Organization {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  orgName        String
  orgDescription String?
  serialNo       Int?
  activeStatus   Boolean   @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime  @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}

model Division {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  divisionName String
  divisionDes  String?
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean    @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime   @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  district     District[]
}

model District {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  districtName String
  districtDes  String?
  division     Division? @relation(fields: [divisionId], references: [id])
  divisionId   String?   @db.ObjectId
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
  thana        Thana[]
}

model Thana {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  thanaName    String
  thanaDes     String?
  district     District? @relation(fields: [dristrictId], references: [id])
  dristrictId  String?   @db.ObjectId
  orgId        Int?
  serialNo     Int?
  activeStatus Boolean   @default(true)
  createdDate  String?
  createdTime  String?
  createdBy    Int?
  createdAt    DateTime  @default(now())
  updatedDate  String?
  updatedTime  String?
  updatedAt    DateTime?
  updatedBy    Int?
}

model Country {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  countryName        String?
  countryDescription String?
  countryCode        Int?
  activeStatus       Boolean    @default(true)
  createdDate        String?
  createdTime        String?
  createdBy          Int?
  createdAt          DateTime   @default(now())
  updatedDate        String?
  updatedTime        String?
  updatedAt          DateTime?
  updatedBy          Int?
  spplier            Supplier[]
}

model Supplier {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  supplierName        String?
  supplierDescription String?
  country             Country?  @relation(fields: [countryId], references: [id])
  countryId           String?   @db.ObjectId
  orgId               Int?
  activeStatus        Boolean   @default(true)
  createdDate         String?
  createdTime         String?
  createdBy           Int?
  createdAt           DateTime  @default(now())
  updatedDate         String?
  updatedTime         String?
  updatedAt           DateTime?
  updatedBy           Int?
}

model ProductGroup {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  udId                    Int?
  groupName               String?
  groupDescription        String?
  remarks                 String?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  requisitionChild        RequisitionChild[]
  requisitionApproveChild RequisitionApproveChild[]
}

model Measurement {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  measurementName         String
  measurementDescription  String?
  remarks                 String?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  requisitionChild        RequisitionChild[]
  requisitionApproveChild RequisitionApproveChild[]
  orderChild              OrderChild[]
}

model RequisitionParent {
  id                       String                    @id @default(auto()) @map("_id") @db.ObjectId
  requisitionNo            String
  requisitionType          Int? //1 for internal, 2 for external
  requisitionFrom          Int?
  requisitionTo            Int?
  itemGroupId              Int?
  itemId                   Int?
  requisitionDate          DateTime
  requisitionStatus        Int                       @default(0) // 0 form requisition pending 1 form approve 2 for cancel
  requisitionRemarks       String
  requisitionAppCanRemarks String // requisition approved or cancel satus
  requisitionBy            Int?
  orgId                    Int?
  activeStatus             Boolean                   @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                  @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
  requisitionChild         RequisitionChild[]
  requisitionApproveChild  RequisitionApproveChild[]
}

model RequisitionChild {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  requisitionParent RequisitionParent? @relation(fields: [requisitionId], references: [id])
  requisitionId     String?            @db.ObjectId
  productGroup      ProductGroup?      @relation(fields: [productGroupId], references: [id])
  productGroupId    String?            @db.ObjectId
  products          Products?          @relation(fields: [itemId], references: [id])
  itemId            String?            @db.ObjectId
  measurement       Measurement?       @relation(fields: [uomId], references: [id])
  uomId             String?            @db.ObjectId
  qty               Int
  price             Int?
  orgId             Int?
  activeStatus      Boolean            @default(true)
  createdDate       String?
  createdTime       String?
  createdBy         Int?
  createdAt         DateTime           @default(now())
  updatedDate       String?
  updatedTime       String?
  updatedAt         DateTime?
  updatedBy         Int?
}

model RequisitionApproveParent {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  requisitionNo           String
  requisitionType         Int? //1 for internal, 2 for external
  requisitionFrom         Int?
  requisitionTo           Int?
  itemGroupId             Int?
  itemId                  Int?
  requisitionDate         DateTime
  requisitionStatus       Int                       @default(0) // 0 form requisition pending 1 form approve 2 for cancel
  requisitionRemarks      String
  requisitionBy           Int?
  orgId                   Int?
  activeStatus            Boolean                   @default(true)
  createdDate             String?
  createdTime             String?
  createdBy               Int?
  createdAt               DateTime                  @default(now())
  updatedDate             String?
  updatedTime             String?
  updatedAt               DateTime?
  updatedBy               Int?
  requisitionApproveChild RequisitionApproveChild[]
}

model RequisitionApproveChild {
  id                       String                    @id @default(auto()) @map("_id") @db.ObjectId
  requisitionApproveParent RequisitionApproveParent? @relation(fields: [requisitionApproveId], references: [id])
  requisitionApproveId     String?                   @db.ObjectId
  requisitionParent        RequisitionParent?        @relation(fields: [requisitionId], references: [id])
  requisitionId            String?                   @db.ObjectId
  productGroup             ProductGroup?             @relation(fields: [itemGroupId], references: [id])
  itemGroupId              String?                   @db.ObjectId
  products                 Products?                 @relation(fields: [productId], references: [id])
  productId                String?                   @db.ObjectId
  measurement              Measurement?              @relation(fields: [uomId], references: [id])
  uomId                    String?                   @db.ObjectId
  approvedQty              Int?
  receivedQty              Int?
  price                    Int?
  orgId                    Int?
  activeStatus             Boolean                   @default(true)
  createdDate              String?
  createdTime              String?
  createdBy                Int?
  createdAt                DateTime                  @default(now())
  updatedDate              String?
  updatedTime              String?
  updatedAt                DateTime?
  updatedBy                Int?
}

model OrderParent {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  orderNo         String
  orderDate       DateTime
  deliveryDate    DateTime?
  orderType       String
  orderBy         String //user id
  shipType        String
  paymentType     String //cache or due
  shippingAddress String
  phoneNumber     String?
  postalCode      Int?
  orderStatus     Int?
  activeStatus    Boolean      @default(true)
  createdDate     String?
  createdTime     String?
  createdBy       Int?
  createdAt       DateTime     @default(now())
  updatedDate     String?
  updatedTime     String?
  updatedAt       DateTime?
  updatedBy       Int?
  orderChild      OrderChild[]
}

model OrderChild {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  orderParent    OrderParent @relation(fields: [orderId], references: [id])
  orderId        String      @db.ObjectId
  products       Products?    @relation(fields: [itemId], references: [id])
  itemId         String?      @db.ObjectId
  itemDescripton String?
  itemQty        Int
  unitPrice      Float
  total          Float
  measurement    Measurement? @relation(fields: [uomId], references: [id])
  uomId          String?      @db.ObjectId
  orderStatus    Int?
  activeStatus   Boolean     @default(true)
  createdDate    String?
  createdTime    String?
  createdBy      Int?
  createdAt      DateTime    @default(now())
  updatedDate    String?
  updatedTime    String?
  updatedAt      DateTime?
  updatedBy      Int?
}
